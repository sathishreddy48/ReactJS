{"ast":null,"code":"import _classCallCheck from \"D:\\\\react\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\my-app\\\\src\\\\FirstChild.js\";\nimport React from 'react';\nimport ChildsChild from './ChildsChild';\n\nvar FirstChild =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FirstChild, _React$Component);\n\n  function FirstChild(props) {\n    var _this;\n\n    _classCallCheck(this, FirstChild);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FirstChild).call(this, props));\n    _this.state = {\n      MessageFrom: 'First Child Message'\n    };\n    return _this;\n  }\n\n  _createClass(FirstChild, [{\n    key: \"Method\",\n    value: function Method(param) {\n      this.state.MessageFrom = param;\n      console.log('FirstChild : Method Called ' + param);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log('FirstChild : component WillMount');\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.GetUpdatesfromDB();\n      // this.interval = setInterval(() => this.GetUpdatesfromDB(), 30000);\n      //  this.interval = setInterval(() => this.UpdateState, 1000);\n      console.log('FirstChild : componentDidMount');\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextState) {\n      console.log(\"FirstChild : Previous value \" + this.state.MessageFrom);\n      console.log(\"FirstChild : Current value \" + nextState.MessageFrom); //console.log(\"Next Props \"+nextProps.state)\n\n      if (this.state.MessageFrom !== nextState.MessageFrom) {\n        console.log(\"FirstChild : State values are Changed \");\n        return true;\n      } else {\n        console.log(\"FirstChild : State values are same \");\n        return false;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var styles = {\n        FirstChild: {\n          backgroundColor: \"red\"\n        }\n      };\n      return React.createElement(\"div\", {\n        style: styles.FirstChild,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"First Child\"), this.state.MessageFrom, React.createElement(\"a\", {\n        onClick: this.Method,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Call local method\"), React.createElement(ChildsChild, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"First child Area ends\"));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      console.log('FirstChild :  componentDidUpdate');\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log('FirstChild :  componentWillUnmount');\n    }\n  }]);\n\n  return FirstChild;\n}(React.Component);\n\nexport { FirstChild as default };","map":{"version":3,"sources":["D:\\react\\my-app\\src\\FirstChild.js"],"names":["React","ChildsChild","FirstChild","props","state","MessageFrom","param","console","log","nextState","styles","backgroundColor","Method","prevProps","prevState","snapshot","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;IACqBC,U;;;;;AAEjB,sBAAYC,KAAZ,EACA;AAAA;;AAAA;;AACI,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACPC,MAAAA,WAAW,EAAE;AADN,KAAX;AAFJ;AAKC;;;;2BACMC,K,EACP;AACI,WAAKF,KAAL,CAAWC,WAAX,GAAuBC,KAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAA8BF,KAA1C;AACH;;;yCAED;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AAEH;;;wCACmB;AACf;AACA;AACA;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH;;;0CAEqBC,S,EAAW;AAC9BF,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAA+B,KAAKJ,KAAL,CAAWC,WAAtD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAA8BC,SAAS,CAACJ,WAApD,EAF8B,CAG9B;;AACE,UAAG,KAAKD,KAAL,CAAWC,WAAX,KAAyBI,SAAS,CAACJ,WAAtC,EACE;AACIE,QAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACA,eAAO,IAAP;AACH,OAJH,MAME;AACID,QAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACA,eAAO,KAAP;AACH;AACP;;;6BACM;AACJ,UAAME,MAAM,GAAG;AACXR,QAAAA,UAAU,EAAE;AACPS,UAAAA,eAAe,EAAC;AADT;AADD,OAAf;AAKA,aAAO;AAAK,QAAA,KAAK,EAAED,MAAM,CAACR,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADL,EAEQ,KAAKE,KAAL,CAAWC,WAFnB,EAGM;AAAG,QAAA,OAAO,EAAE,KAAKO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHN,EAIM,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJN,EAKM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCALN,CAAP;AAOH;;;uCACkBC,S,EAAUC,S,EAAUC,Q,EACvC;AACIR,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACH;;;2CAED;AACID,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACH;;;;EA9DmCR,KAAK,CAACgB,S;;SAAzBd,U","sourcesContent":["import React from 'react'\r\nimport ChildsChild from './ChildsChild'\r\nexport default class FirstChild extends React.Component{\r\n    \r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state={\r\n            MessageFrom :'First Child Message'\r\n        }\r\n    }\r\n    Method(param)\r\n    {\r\n        this.state.MessageFrom=param;\r\n        console.log('FirstChild : Method Called '+param);\r\n    }\r\n    componentWillMount()\r\n    {\r\n        console.log('FirstChild : component WillMount');\r\n        \r\n    }\r\n    componentDidMount() {\r\n         // this.GetUpdatesfromDB();\r\n         // this.interval = setInterval(() => this.GetUpdatesfromDB(), 30000);\r\n         //  this.interval = setInterval(() => this.UpdateState, 1000);\r\n         console.log('FirstChild : componentDidMount');\r\n     }\r\n   \r\n     shouldComponentUpdate(nextState) {\r\n        console.log(\"FirstChild : Previous value \"+this.state.MessageFrom);\r\n        console.log(\"FirstChild : Current value \"+nextState.MessageFrom);\r\n        //console.log(\"Next Props \"+nextProps.state)\r\n          if(this.state.MessageFrom!==nextState.MessageFrom)\r\n            {\r\n                console.log(\"FirstChild : State values are Changed \");\r\n                return true;\r\n            }\r\n        else\r\n            { \r\n                console.log(\"FirstChild : State values are same \");\r\n                return false;\r\n            } \r\n     }\r\n    render(){\r\n        const styles = {\r\n            FirstChild: {\r\n                 backgroundColor:\"red\"\r\n            }\r\n        };\r\n        return <div style={styles.FirstChild}>\r\n                    <p>First Child</p>\r\n                     { this.state.MessageFrom}\r\n                     <a onClick={this.Method}>Call local method</a>\r\n                     <ChildsChild></ChildsChild>\r\n                     <p>First child Area ends</p>\r\n               </div>\r\n    };\r\n    componentDidUpdate(prevProps,prevState,snapshot)\r\n    {\r\n        console.log('FirstChild :  componentDidUpdate')\r\n    }\r\n    componentWillUnmount()\r\n    {\r\n        console.log('FirstChild :  componentWillUnmount')\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}